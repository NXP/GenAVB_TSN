################################################################
#                                                              #
# AVB configuration file.                                      #
# It is made of different sections delimited with [XXXX] tags. #
# Each section can contain multiple key/value pairs.           #
#                                                              #
################################################################


################################################################
#        AVB section (parameters of "avb" application)         #
################################################################
[AVB_GENERAL]
# Log level: 'crit', 'err', 'init', 'info', 'dbg'. default: info
# Sets log level for most stack components
log_level = info

# Disable log for one or more components: 'avtp', 'avdecc', 'gptp', 'common', 'os', 'api', or 'none'
# Use a comma separated list to specify several components, eg: avtp, avdecc
disable_component_log = none

# Controls if monotonic time is included in the logs output
# disabled: only ptp time is included in logs output
# enabled: both ptp and monotonic times are included in logs output
log_monotonic = disabled

[AVB_AVDECC]
# Enabled: 0 - disabled, 1 - enabled, default: enabled.
# Enables AVDECC stack component.
enabled = 1

# Milan mode: 0 - disabled, 1 - enabled, default: disabled.
# Enable AVDECC stack to run according to AVnu MILAN specifications
milan_mode = 1

# association ID to advertise for the local entities. Optional. Default : 0
#association_id = 2

# Maximum number of discoverable AVDECC entities.Min: 8 , Max: 128, Default: 16.
max_entities_discovery = 16

[AVB_AVDECC_ENTITY_1]
# The entity id is the unique EUI-64 identifier of the AVDECC entity.
# See "Custom AEM parameters" in section 3 of the "AVB configuration" page of the Programmer's manual for details.
entity_id = 0

# Load avdecc entity definition from binary file, use 'none' if not used
# First entity can be controller, or talker/listener entity, or none
entity_file = /etc/genavb/listener_talker_audio_single_milan.aem

# Maximum number of listener streams supported for this AVDECC entity. Min: 1, Max: 64, Default: 8
max_listener_streams = 8

# Maximum number of talker streams supported for this AVDECC entity. Min: 1, Max: 64, Default: 8
max_talker_streams = 8

# Maximum number of simultaneous inflight commands for this AVDECC entity. Min: 5, Max: 128, Default: 5
max_inflights = 16

# Maximum number of unsolicited notifications registration for this AVDECC entity. Min: 1, Max: 64, Default: 8
max_unsolicited_registratons = 8

# Channel wait mask: bitmask of control channels to wait for, default 0 (don't wait for any channel)
# The stack willl wait for the specified control channels to be opened (by the application) before enabling the entity.
# Bit definitions:
# Bit 0: MEDIA_STACK channel
# Bit 1: CONTROLLER channel
# Bit 2: CONTROLLED channel
#
# Example values:
# 0 - Start AVDECC immediately on stack startup, without waiting for any channel (default if not specified).
# 1 - Wait for the MEDIA_STACK channel to be opened before starting AVDECC for the entity.
# 4 - Wait for the CONTROLLED channel to be opened before starting AVDECC for the entity.
# 5 - Wait for both the MEDIA_STACK and CONTROLLED channels to be opened before starting AVDECC for the entity.
#
# Any value above 7 will be ignored.
# Setting bit 1 (CONTROLLER) on a streaming-only entity will disable that entity completely without any way to enable
# it again at runtime (since the CONTROLLER channel only applies to CONTROLLER entities, a streaming-only entity will
# wait for that channel to be opened forever).
# Similarly, specifying a channel_waitmask of 1 or 5 on a CONTROLLER-only entity will disable that entity completely as
# well.
channel_waitmask = 1

[AVB_AVDECC_ENTITY_2]
# load avdecc entity definition from binary file, use 'none' if not used.
# Second entity can only be controller, or none
entity_file = /etc/genavb/controller.aem

# Maximum number of simultaneous inflight commands for this AVDECC entity. Min: 5, Max: 128, Default: 5
max_inflights = 16

channel_waitmask = 2
