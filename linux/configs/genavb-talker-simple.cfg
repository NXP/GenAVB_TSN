################################################################
#                                                              #
# AVB configuration file.                                      #
# It is made of different sections delimited with [XXXX] tags. #
# Each section can contain multiple key/value pairs.           #
#                                                              #
################################################################


################################################################
#        AVB section (parameters of "avb" application)         #
################################################################
[AVB_GENERAL]
# Log level: 'crit', 'err', 'init', 'info', 'dbg'. default: info
# Sets log level for most stack components
log_level = info

# Disable log for one or more components: 'avtp', 'avdecc', 'gptp', 'common', 'os', 'api', or 'none'
# Use a comma separated list to specify several components, eg: avtp, avdecc
disable_component_log = none

# Controls if monotonic time is included in the logs output
# disabled: only ptp time is included in logs output 
# enabled: both ptp and monotonic times are included in logs output
log_monotonic = disabled

[AVB_AVDECC]
# Enabled: 0 - disabled, 1 - enabled, default: enabled.
# Enables AVDECC stack component.
enabled = 1

# SRP enabled: 0 - disabled, 1 - enabled, default: enabled.
# Enables SRP API's to be called directly from AVDECC stack component.
srp_enabled = 1

# Fast-connect: 0 - disabled, 1 - enabled, default: disabled.
# Enables fast connect mode (Listener entity will connect streams automatically, based on saved talker information).
fast_connect = 0

# Back to back demo mode: 0 - disabled, 1 - enabled, default: disabled
# When enabled this entity will connect to the first talker advertised on the network. This is a demo mode.
# (The other entity shouldn't have this mode enabled). This will force fast_connect to 1.
btb_demo_mode = 0

# association ID to advertise for the local entities. Optional. Default : 0
association_id = 2

# Maximum number of discoverable AVDECC entities.Min: 8 , Max: 128, Default: 16.
max_entities_discovery = 16

[AVB_AVDECC_ENTITY_1]
# The entity id is the unique EUI-64 identifier of the AVDECC entity.
# See "Custom AEM parameters" in section 3 of the "AVB configuration" page of the Programmer's manual for details.
entity_id = 0

# Load avdecc entity definition from binary file, use 'none' if not used
# First entity can be controller, or talker/listener entity, or none
entity_file = /etc/genavb/talker_audio_single.aem

# The valid time period for the AVDECC entity in seconds. Min: 2 , Max: 62, Default: 62.
valid_time = 60

# Maximum number of listener streams supported for this AVDECC entity. Min: 1, Max: 64, Default: 8
max_listener_streams = 8

# Maximum number of talker streams supported for this AVDECC entity. Min: 1, Max: 64, Default: 8
max_talker_streams = 8

# Maximum number of connected listeners per talker for this AVDECC entity. Min: 1, Max: 512, Default: 10
max_listener_pairs = 10

# Maximum number of simultaneous inflight commands for this AVDECC entity. Min: 5, Max: 128, Default: 5
max_inflights = 16

# Maximum number of unsolicited notifications registration for this AVDECC entity. Min: 1, Max: 64, Default: 8
max_unsolicited_registratons = 8

# The stream connection mapping between the Talker(s) and the Listener entities is defined by the talker_unique_id_list,
# the listener_unique_id_list and the talker_entity_id_list.
# Following is a configuration example with 1 Listener and 2 different Talkers where:
#     Talker1 entity ID = 0x001122FFFE334455, Talker2 entity ID = 0xAABBCCFFFEDDEEFF
#     Listener stream 0 <-- Talker 1 stream 0
#     Listener stream 1 <-- Talker 2 stream 0
#     Listener stream 2 <-- Talker 1 stream 1
# The corresponding settings should be:
#     talker_entity_id_list = 0x001122FFFE334455, 0xAABBCCFFFEDDEEFF, 0x001122FFFE334455
#     talker_unique_id_list = 0, 0, 1
#     listener_unique_id_list = 0, 1, 2

# Talker(s) AVDECC entity ID list: <id>[,<id>,<id>] (used only in fast-connect mode). Optional : default 'none'.
# The Talker entity ID is the unique EUI-64 identifier of the Talker AVDECC entity this endpoint is connected to.
talker_entity_id_list = 0

# Talker unique ID list : <id>[,<id>,<id>] (used only in fast-connect mode). Optional : default 'none'
talker_unique_id_list = 0

# Listener unique ID list : <id>[,<id>,<id>] (used only in fast-connect mode). Optional : default 'none'
listener_unique_id_list = 0

# Channel wait mask: bitmask of control channels to wait for, default 0 (don't wait for any channel)
# The stack willl wait for the specified control channels to be opened (by the application) before enabling the entity.
# Bit definitions:
# Bit 0: MEDIA_STACK channel
# Bit 1: CONTROLLER channel
# Bit 2: CONTROLLED channel
#
# Example values:
# 0 - Start AVDECC immediately on stack startup, without waiting for any channel (default if not specified).
# 1 - Wait for the MEDIA_STACK channel to be opened before starting AVDECC for the entity.
# 4 - Wait for the CONTROLLED channel to be opened before starting AVDECC for the entity.
# 5 - Wait for both the MEDIA_STACK and CONTROLLED channels to be opened before starting AVDECC for the entity.
#
# Any value above 7 will be ignored.
# Setting bit 1 (CONTROLLER) on a streaming-only entity will disable that entity completely without any way to enable
# it again at runtime (since the CONTROLLER channel only applies to CONTROLLER entities, a streaming-only entity will
# wait for that channel to be opened forever).
# Similarly, specifying a channel_waitmask of 1 or 5 on a CONTROLLER-only entity will disable that entity completely as
# well.
channel_waitmask = 1

[AVB_AVDECC_ENTITY_2]
# load avdecc entity definition from binary file, use 'none' if not used.
# Second entity can only be controller, or none
entity_file = /etc/genavb/controller.aem

# The valid time period for the AVDECC entity in seconds. Min: 2 , Max: 62, Default: 62.
valid_time = 60

# Maximum number of simultaneous inflight commands for this AVDECC entity. Min: 5, Max: 128, Default: 5
max_inflights = 16

channel_waitmask = 2
